{"version":3,"sources":["custom.js","outdated-browser-rework-custom.js"],"names":["jQuery","add","find","on","this","parent","attr","val","e","prev","not","toggleClass","document","body","country","$wrapper","each","$this","required","closest","is","UIkit_class","addClass","ready","active","event","preventDefault","stopPropagation","href","target","removeClass","$ukModal","UIkit","modal","show","window","load","$confirmation_message","length","dialog","html","remove","$message_html","notification","status","timeout","hash","location","replace","error","first","prevAll","toggle","el","errorProduct","trigger","outdatedBrowserRework","browserSupport","Chrome","Edge","Safari","Mobile Safari","Firefox","Opera","Vivaldi","Yandex","major","minor","IE","requiredCssProperty","requireChromeOnAndroid","isUnknownBrowserOK","messages","en","outOfDate","unsupported","update","web","googlePlay","appStore","url","callToAction","close"],"mappings":"aAIAA,OAAO,sBAEFC,IAAI,8BACJC,KAAK,YACLC,GAAG,QAAS,WACTH,OAAOI,MAAMC,SAASC,KAAK,aAAaN,OAAOI,MAAMG,SAQ7DP,OAAO,4BAEFE,KAAK,UACLD,IAAI,cACJE,GAAG,SAAU,WACVH,OAAOI,MAAME,KAAK,aAAaN,OAAOI,MAAMG,SAC7CD,KAAK,aAAa,IAIzBN,OAAO,aAAaG,GAAG,mBAAoB,SAASK,GAChDR,OAAOI,MAAMK,KAAK,iBAAiBC,IAAI,KAAKC,YAAY,aAI5DX,OAAQY,SAASC,MAAOV,GAAI,2BAA4B,SAAUK,EAAGM,EAASC,GAC3DA,EAASb,KAAK,qDACpBc,KAAK,WACV,IAAIC,EAAQjB,OAAOI,MACfc,EAAWD,EAAME,QAAQ,aAAaC,GAAG,oEACzCC,EAAgBJ,EAAMG,GAAI,UAAe,YAAc,WAC3DH,EACKK,SAAUD,GACVf,KAAK,gBAAiBY,GACtBZ,KAAK,gBAAiB,YAKnCN,OAAOY,UAAUW,MAAM,WAGnB,IAAIC,EAGJxB,OAAQ,kDAAmDG,GAAG,QAAS,SAASsB,GAC5EA,EAAMC,iBACND,EAAME,kBAGN,IAAIC,EAAO5B,OAAOI,MAAME,KAAK,SAGW,IAApCN,OAAOyB,EAAMI,QAAQT,GAAGI,KACxBxB,OAAOwB,GAAQM,YAAY,UAC3B9B,OAAO4B,GAAMN,SAAS,UACtBE,EAASI,GAIb,IAAIG,EAAW/B,OAAO4B,EAAO,cAC7BG,EAASf,KAAK,WAAYgB,MAAMC,MAAMF,GAAUG,WAIpDlC,OAAO,QAAQG,GAAG,QAAS,SAASsB,IACQ,IAApCzB,OAAOyB,EAAMI,QAAQT,GAAGI,KACxBxB,OAAOwB,GAAQM,YAAY,UAC3BN,GAAS,KAKjBxB,OAAOmC,QAAQC,KAAK,WAEhB,IAAIC,EAAwBrC,OAAO,+BAA+BU,IAAI,gDACnE2B,EAAsBC,SACrBN,MAAMC,MAAMM,OAAO,8BAAgCF,EAAsBG,OAAS,UAClFH,EAAsBI,UAIPzC,OAAO,yCACbgB,KAAK,WACd,IAAI0B,EAAgB1C,OAAOI,MAAMoC,OACjCR,MAAMW,aAAaD,EAAe,CAACE,OAAO,UAAWC,QAAS,QAK9DC,EAAOC,SAASD,KAAKE,QAAQ,IAAI,IAC1B,IAARF,GACe9C,OAAO,IAAM8C,EAAO,cAC1B9B,KAAK,WAAYgB,MAAMC,MAAM7B,MAAM8B,WAOnDlC,OAAO,iBACFmB,QAAQ,iBACRV,OACAa,SAAS,gBAGdtB,OAAO,+CAA+CM,KAAK,gBAAgB,QAC3EN,OAAO,mCAAmCM,KAAK,WAAY,GAG3D,IAAI2C,EAAQjD,OAAO,iBAAiBkD,QACtBlD,OAAO,4CAA4CkD,QAC9C,EAAfD,EAAMX,SACNd,EAASyB,EAAME,QAAQ,kBAAkBb,OACzCc,OAAOC,GAAI7B,GAGe,GADtB8B,EAAeL,EAAM9B,QAAQ,YAAYV,OAAOP,KAAK,qCACxCoC,QACbgB,EAAaC,QAAQ,YC7HjCC,sBAAsB,CACrBC,eAAgB,CACfC,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACRC,gBAAiB,GACjBC,QAAS,GACTC,MAAO,GACPC,QAAS,EAETC,OAAQ,CAAEC,MAAO,GAAIC,MAAO,IAG5BC,IAAI,GAELC,oBAAqB,OACrBC,wBAAwB,EACxBC,oBAAoB,EACpBC,SAAU,CACTC,GAAI,CACHC,UAAW,qDACXC,YAAa,2DACbC,OAAQ,CACPC,IAAK,6FACLC,WAAY,yCACZC,SAAU,4CAIXC,IAAK,6BACLC,aAAc,wBACdC,MAAO","file":"../custom.min.js","sourcesContent":["// for auto-growing textareas, along with a bunch of CSS\n// const textareas = '.wpcf7-form textarea';   // CF7\n\n// const textareas = '.ginput_container_textarea';    // Gravity Forms\njQuery('.textarea-autogrow')\n    // .add('.wpcf7-form')\n    .add('.woocommerce-input-wrapper')\n    .find('textarea')\n    .on('input', function(){\n        jQuery(this).parent().attr('data-value',jQuery(this).val());\n    }); //.parent().addClass('textarea');\n\n\n\n// allow CSS styling select based on choice\n// const selects = '.wpcf7-form select';       // CF7\n// const selects = '.ginput_container_select select';       // Gravity Forms\njQuery('.ginput_container_select')\n    // .add('.wpcf7-form')\n    .find('select')\n    .add('.uk-select')\n    .on('change', function(){\n        jQuery(this).attr('data-value',jQuery(this).val());\n    }).attr('data-value','');\n\n\n// form icon coloring on input focus\njQuery('.uk-input').on('focusin focusout', function(e) {\n    jQuery(this).prev('.uk-form-icon').not('a').toggleClass('hovered');\n});\n\n// add UIkit form element classes to WooCommerce-created elements\njQuery( document.body ).on( 'country_to_state_changed', function( e, country, $wrapper ) {\n    var $changed = $wrapper.find('select:not(.uk-select), input:text:not(.uk-input)');\n    $changed.each(function(){\n        var $this = jQuery(this);\n        var required = $this.closest('.form-row').is(\"[data-o_class*='validate-required'],[class*='validate-required']\");\n        var UIkit_class = ( $this.is( 'select' ) ) ? 'uk-select' : 'uk-input';\n        $this\n            .addClass( UIkit_class )\n            .attr('aria-required', required)\n            .attr('data-lpignore', 'true');\n    });\n});\n\n\njQuery(document).ready(function(){\n\n    // Global active class for elements such as footnotes\n    var active;\n\n    // Do stuff when clicking an anchor link\n    jQuery( 'a[href^=#]:not([href$=#]):not([aria-expanded])' ).on('click', function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Get target element ID\n        var href = jQuery(this).attr('href');\n\n        // Add 'active' class to target element\n        if (jQuery(event.target).is(active) === false) {\n            jQuery(active).removeClass('active');\n            jQuery(href).addClass('active');\n            active = href;\n        }\n\n        // Trigger modals when any link to them is clicked\n        var $ukModal = jQuery(href + '[uk-modal]');\n        $ukModal.each(function(){ UIkit.modal($ukModal).show(); });\n    });\n\n    // Remove 'active' class on elements when clicking off of them\n    jQuery('body').on('click', function(event) {\n        if (jQuery(event.target).is(active) === false) {\n            jQuery(active).removeClass('active');\n            active = false;\n        }\n    });\n\n\n    jQuery(window).load(function(){\n        // Form completion message as modal dialog\n        var $confirmation_message = jQuery('.gform_confirmation_message').not('.uk-modal-dialog .gform_confirmation_message');\n        if($confirmation_message.length) {\n            UIkit.modal.dialog('<div class=\"uk-modal-body\">' + $confirmation_message.html() + '</div>');\n            $confirmation_message.remove();\n        }\n\n        // WooCommerce success messages (such as '... has been added to your cart.') show as UIkit alerts\n        var $woo_message = jQuery('.woocommerce-message.uk-alert-success');\n        $woo_message.each(function(){\n            var $message_html = jQuery(this).html();\n            UIkit.notification($message_html, {status:'success', timeout: 1000000});\n        });\n\n        // Links to http://page#id show modal dialog with #id\n        // Remove the # from the hash, as different browsers may or may not include it\n        var hash = location.hash.replace('#','');\n        if(hash != ''){\n            var $target = jQuery('#' + hash + '[uk-modal]');\n            $target.each(function(){ UIkit.modal(this).show(); });\n        }\n\n    });\n\n    // can't find a way in PHP to have sections or even parent ul pick up\n    // the error class of a field\n    jQuery('.gfield_error')\n        .closest('.gform_fields')\n        .prev()\n        .addClass('gfield_error');\n\n    // add aria-required to required woocommerce fields\n    jQuery('.woocommerce .validate-required [type=text]').attr('aria-required','true');\n    jQuery('woocommerce-loop-product__title').attr('tabindex', 0);\n\n    // scroll to form submit errors\n    var error = jQuery('.gfield_error').first();\n    var message = jQuery('.woocommerce-notices-wrapper:not(:empty)').first();\n    if (error.length > 0) {\n        active = error.prevAll('.gform_section').length;\n        toggle(el, active);\n\n        let errorProduct = error.closest('.summary').prev().find('.woocommerce-loop-product__title');\n        if (errorProduct.length > 0) {\n            errorProduct.trigger('click');\n        }\n\n    // } else if (message.length > 0) {\n    //     jQuery(window).scrollTop(message.offset().top - 60);\n    }\n});\n\n","outdatedBrowserRework({\n\tbrowserSupport: {\n\t\tChrome: 57, // Includes Chrome for mobile devices\n\t\tEdge: 39,\n\t\tSafari: 10,\n\t\t\"Mobile Safari\": 10,\n\t\tFirefox: 50,\n\t\tOpera: 50,\n\t\tVivaldi: 1,\n\t\t// You could specify minor version too for those browsers that need it.\n\t\tYandex: { major: 17, minor: 10 },\n\t\t// You could specify a version here if you still support IE in 2021.\n\t\t// You could also instead seriously consider what you're doing with your time and budget.\n\t\tIE: false\n\t},\n\trequiredCssProperty: 'grid',\n\trequireChromeOnAndroid: false,\n\tisUnknownBrowserOK: true,\n\tmessages: {\n\t\ten: {\n\t\t\toutOfDate: \"Looks like the browser<br>you're using is too old.\",\n\t\t\tunsupported: \"Looks like the browser<br>you're using is not supported.\",\n\t\t\tupdate: {\n\t\t\t\tweb: \"This page may not display as intended. Update your browser<br>for a better experience.<br>\",\n\t\t\t\tgooglePlay: \"Please install Chrome from Google Play\",\n\t\t\t\tappStore: \"Please update iOS from the Settings App.\"\n\t\t\t},\n\t\t\t// You can set the URL to null if you do not want a clickable link or provide\n\t\t\t// your own markup in the `update.web` message.\n\t\t\turl: \"http://browser-update.org/\",\n\t\t\tcallToAction: \"Update my browser now\",\n\t\t\tclose: \"Close\"\n\t\t}\n\t}\n});\n"]}