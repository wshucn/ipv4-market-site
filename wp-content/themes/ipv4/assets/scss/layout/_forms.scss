// NOTE: Gravity Forms may override some of the styling here unless it's set
// not to output CSS.



// Go away, LastPass icon
div[id^=__lpform_] { display: none; }


// GRAVITY

.gform_validation_errors {
	margin-bottom: $global-small-margin;
}

.ginput_container { position: relative; }

/**
 Honeypot
 */

.gform_validation_container,
.gform_wrapper.gravity-theme .gform_validation_container,
body .gform_wrapper.gravity-theme .gform_validation_container,
body .gform_wrapper.gravity-theme .gform_body .gform_fields .gfield.gform_validation_container,
body .gform_wrapper.gravity-theme .gform_fields .gfield.gform_validation_container {
	display: none !important;
	position: absolute !important;
	left: -9000px;
}

.gform_fields {
	margin-bottom: 0;
	list-style-type: none;
	padding: 0;

	// Hide the required asterisk.
	legend,
	label[for^=input] {
		abbr.required { display: none; }

	}

}

// Input counters.
.ginput_container.has-max-length {
	margin-bottom: calc($global-small-margin + 11px);
}
.ginput_container .instruction,
.ginput_counter {
	position: absolute;
	right: $form-padding-horizontal; top: 100%;
	// margin: 0 calc( $form-padding-horizontal + $form-border-width ) 0;
	max-width: calc(100% - ($form-padding-horizontal * 2));
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
	font-size: 11px;

	user-select: none;
	pointer-events: none;
}

// AJAX spinner inserts after Submit button, in .gform_footer.
.gform_footer {
	text-align: center;
	.gform_submit_button_wrapper {
		position: relative;
	}
	.gform_ajax_spinner {
		height: calc(#{$button-line-height} * .75);
		width: auto;
		position: absolute;
		left: calc( 100% + #{$global-small-margin} );
		top: 50%;
		transform: translateY(-50%);
	}
}

// Add spacing to half, quarter, third, and three-quarter width fields.
@media screen and (min-width: $breakpoint-medium) {
	.gform_fields {
		> .uk-inline-block { padding-right: calc(#{$global-small-margin} / 2); }
		> .uk-inline-block + .uk-inline-block { padding-left: calc(#{$global-small-margin} / 2); }

		> .width-1-2 + .width-1-2,
		> .width-1-3 + .width-1-3 + .width-1-3,
		> .width-1-4 + .width-1-4 + .width-1-4 + .width-1-4,
		> .width-1-2 + .width-1-4 + .width-1-4,
		> .width-1-4 + .width-1-2 + .width-1-4,
		> .width-3-4 + .width-1-4,
		> .width-1-4 + .width-3-4 { padding-right: 0; }
	}
}


// Horizontal forms use CSS class 'inline' in Gravity Form settings.
.inline_wrapper {
	width: 100%;

	@media screen and (min-width: $breakpoint-small) {
		.gform_title {
			display: inline-flex;
			align-items: center;
			white-space: nowrap;
		}
		.gform_title,
		.gform_fields {
			margin-bottom: 0;
		}

		.gform_body { flex: 1; }

		.gform_body,
		.uk-form-controls,
		.uk-input { width: 100%; }

	}
}

/**
 *
 * NUMERICAL INPUTS
 *
 */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}
input[type=number] {
	-moz-appearance: textfield;
}

/**
 *
 * TEXTAREAS
 *
 */
// Auto-expanding textareas, alongside some JS.

// Hide scrollbar on textarea
textarea {
	overflow: hidden;
	resize: none;
	max-height: none;
}

%textarea-autogrow {
	display: grid;
	grid-template-rows: 0; // will add a small empty row otherwise
	vertical-align: middle;
	align-items: stretch;
	position: relative;

	&::after,
	textarea {
		grid-area: 2 / 1 / 2 / 1;

		// It's necessary for the pseudo-element and the real element to have
		// these the same padding, font-size and line-height.

		// UIkit's default form-line-height is 38px, which ends up double-spacing textareas.
		// So we halve that value and use a vertical padding based on it. There are two places
		// where this needs tweaking: padding, and min-height.

		font: inherit;
		line-height: calc(#{$form-line-height} / 2) !important;
		padding: calc(#{$form-line-height} / 4) $form-padding-horizontal;
		min-height: calc(#{$form-height} - (#{$form-line-height} / 2));

		text-align: start;

		white-space: pre-wrap;
		height: auto !important;
		overflow: hidden; // prevent scrollbars

	}

	// Add extra bottom padding when a progress bar (counter) is present.
	&.has-max-length::after {
		padding-bottom: calc((#{$form-line-height} / 4) + 10px);
	}


	// textarea:placeholder-shown {
	//     padding-top: $form-textarea-top-padding;
	// }

	// textarea:focus {
	//     padding-top: $form-textarea-labelled-top-padding;
	// }

	&::after {
		content: attr(data-value) ' ';
		visibility: hidden;
	}
}

.ginput_container_textarea, .textarea-autogrow { @extend %textarea-autogrow; }


// Show credit card icons in inputs when a card number is validated
input[type].identified {
	background-repeat: no-repeat;
	background-size: auto calc(100% - ( #{$form-padding-vertical} * 2 ));
	background-position: calc(100% - #{$form-padding-vertical}) center;

	// TODO: base64 and inline these card vectors.
	&.visa { background-image: url('/assets/images/card-visa.svg'); }
	&.visa-electron { background-image: url('/assets/images/card-visa-electron.svg'); }
	&.visa-debit { background-image: url('/assets/images/card-visa-debit.svg'); }
	&.switch { background-image: url('/assets/images/card-switch.svg'); }
	&.solo { background-image: url('/assets/images/card-solo.svg'); }
	&.paypal { background-image: url('/assets/images/card-paypal.svg'); }
	&.moneybookers { background-image: url('/assets/images/card-moneybookers.svg'); }
	&.mastercard { background-image: url('/assets/images/card-mastercard.svg'); }
	&.maestro { background-image: url('/assets/images/card-maestro.svg'); }
	&.laser { background-image: url('/assets/images/card-laser.svg'); }
	&.jcb { background-image: url('/assets/images/card-jcb.svg'); }
	&.google { background-image: url('/assets/images/card-google.svg'); }
	&.echeck { background-image: url('/assets/images/card-echeck.svg'); }
	&.discover { background-image: url('/assets/images/card-discover.svg'); }
	&.dinersclub { background-image: url('/assets/images/card-dinersclub.svg'); }
	&.cirrus { background-image: url('/assets/images/card-cirrus.svg'); }
	&.cc-plain { background-image: url('/assets/images/card-cc-plain.svg'); }
	&.cc-invalid { background-image: url('/assets/images/card-cc-invalid.svg'); }
	&.cartebleue { background-image: url('/assets/images/card-cartebleue.svg'); }
	&.amex { background-image: url('/assets/images/card-amex.svg'); }
	&.amazon { background-image: url('/assets/images/card-amazon.svg'); }
}

// COMPACT
.compact form,
form.compact {

	padding: $padding-small-padding;

	.gsection_title { text-align: center; }
	.gform_fields { justify-content: center; align-items: center; }
	.gform_body { flex: none; }

	@media screen and (min-width: $breakpoint-medium){

		.gsection_title { white-space: nowrap; }
		display: flex;
		justify-content: center;

		button[type=submit] { margin-top: 0 !important; margin-left: $margin-margin; }
	}

}

.semitransparent form,
form.semitransparent {
	.uk-input {
		background-color: rgba(255, 255, 255, 0.3);
		border-color: transparent !important;
		color: $white;
		&::placeholder { color: rgba(255, 255, 255, 0.8); }
	}
}
