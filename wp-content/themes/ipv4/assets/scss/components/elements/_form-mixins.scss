//
// Component: Form
//
// ========================================================================
@use 'sass:math';
@use 'sass:color';

$invalid-color: rgba($alert-warning-color, 0.75);

// Required fields show a tag and asterisk on the right border.
// Forms on dark backgrounds will need to specify the 'light' variation
// asterisk as well as style the border-right-color to appear suitable.
$required-mark-dark-color: color.scale($form-border-color, $alpha: 40%);
$required-mark-dark: "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='32.275' height='30.469'><path fill='" + $required-mark-dark-color + "' d='M0 14.355l2.246-6.933c5.176 1.823 8.936 3.402 11.28 4.736-.62-5.892-.945-9.944-.977-12.158h7.08c-.098 3.223-.472 7.26-1.123 12.11 3.353-1.693 7.194-3.256 11.523-4.688l2.246 6.933c-4.134 1.368-8.186 2.28-12.158 2.735 1.986 1.725 4.785 4.801 8.399 9.228l-5.86 4.15c-1.888-2.57-4.118-6.07-6.69-10.497-2.408 4.59-4.524 8.089-6.347 10.498l-5.762-4.15c3.776-4.656 6.478-7.732 8.106-9.23A175.16 175.16 0 010 14.355'/></svg>";

$required-mark-light-color: color.scale($form-background, $whiteness: 10%);
$required-mark-light: "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='32.275' height='30.469'><path fill='" + $required-mark-light-color + "' d='M0 14.355l2.246-6.933c5.176 1.823 8.936 3.402 11.28 4.736-.62-5.892-.945-9.944-.977-12.158h7.08c-.098 3.223-.472 7.26-1.123 12.11 3.353-1.693 7.194-3.256 11.523-4.688l2.246 6.933c-4.134 1.368-8.186 2.28-12.158 2.735 1.986 1.725 4.785 4.801 8.399 9.228l-5.86 4.15c-1.888-2.57-4.118-6.07-6.69-10.497-2.408 4.59-4.524 8.089-6.347 10.498l-5.762-4.15c3.776-4.656 6.478-7.732 8.106-9.23A175.16 175.16 0 010 14.355'/></svg>";

$required-mark-size: 12px !default;
$required-mark-position: calc(100% + 15px) 6px !default;
$required-mark-position-multiline-y: 6px !default;
$required-mark-border: calc(#{$required-mark-size} + 6px) solid $form-border-color !default;

// Fully rounded form fields need particular styling vs. merely partly rounded ones
@if ( $form-border-radius >= math.div($form-height, 2) ) {
	$required-mark-size: 14px;
	$required-mark-position: calc(100% - 10px) 50%;
	$required-mark-position-multiline-y: 12px;
	$required-mark-border: $form-border-width solid $form-border-color;
}

%styled_input {
	background-repeat: no-repeat;
	background-position: $required-mark-position;
	background-size: $required-mark-size;
	&.uk-textarea { background-position-y: $required-mark-position-multiline-y; }
}

%required_input {
	@extend %styled_input;
	border-right: $required-mark-border;
	background-image: url($required-mark-dark);
	.semitransparent & { background-image: url($required-mark-light); }
}

%invalid_input {
	border-color: $invalid-color !important;
	background-color: $alert-warning-background;
	&::placeholder { color: rgba($alert-warning-color, min(alpha($form-placeholder-color) * 4, 1)); }
	&:focus { box-shadow: 0 0 0 $form-focus-outline-width color.scale($invalid-color, $alpha: -50%) !important; }
}

%invalid_input_required {
	@extend %styled_input;
	background-image: url($required-mark-light) !important;
	background-blend-mode: difference;
	.semitransparent & { background-blend-mode: initial; }
}

@if ( $form-border-radius >= math.div($form-height, 2) ) {

	// pill-shape for all sizes of forms
	// $form-border-radius: 999px;

	%invalid_input_required {
		@extend %styled_input;
		background-image: url($required-mark-dark) !important;
		background-blend-mode: multiply;
	}
}

// Component
// ========================================================================

@mixin hook-form(){
	font-size: $global-font-size;

	border: $form-border-width solid $form-border-color;
	border-radius: $form-border-radius;

	@if ( $form-border-radius >= math.div($form-height, 2) ) {

		&.uk-form-small:not(textarea):not([multiple]):not([size]) {
			border-radius: math.round(math.div($form-small-height, 2));
		}
		&.uk-form-large:not(textarea):not([multiple]):not([size]) {
			border-radius: math.round(math.div($form-large-height, 2));
		}

	}

	transition-property: border, border-color, background-color, box-shadow;
	transition-duration: 100ms;
	transition-timing-function: ease-in-out;
	will-change: border, border-color, background-color, box-shadow;

	&::placeholder { transition: opacity 100ms ease-in-out; }
	&[aria-required]:not([aria-required=false]) {

		// show the 'required' asterisk only when the input is empty
		// this also fixes a webkit autofill glitch that overrides background
		&:placeholder-shown {
			@extend %required_input;
		}

		&:invalid {
			@extend %required_input;
			@extend %invalid_input_required;
		}
	}
	&:invalid {
		@extend %invalid_input;
	}

}
// @mixin hook-form-single-line(){}
// @mixin hook-form-multi-line(){}
@mixin hook-form-focus(){
	&::placeholder { opacity: 0.5; }

	box-shadow: 0 0 0 $form-focus-outline-width $form-focus-outline;

	&:invalid {
		box-shadow: 0 0 0 $form-focus-outline-width color.scale($invalid-color, $alpha: -50%) !important;
	}
}
// @mixin hook-form-disabled(){}
// @mixin hook-form-danger(){}
// @mixin hook-form-success(){}
// @mixin hook-form-blank(){}
@mixin hook-form-blank-focus(){
	border: $form-border-width $form-blank-focus-border-style $form-blank-focus-border;
}




// Style modifiers
// ========================================================================

@mixin hook-form-small(){
	@if ( $form-border-radius >= math.div($form-height, 2) ) {

		// pill-shape for all sizes of forms
		border-radius: math.round(math.div($form-small-height, 2));

		.uk-select:not([multiple]):not([size]) { background-position-y: 57%; }

	}
}

@mixin hook-form-large(){
	@if ( $form-border-radius >= math.div($form-height, 2) ) {
		.uk-select:not([multiple]):not([size]) { background-position-y: 58%; }
	}
}



// Radio and checkbox
// ========================================================================

@mixin hook-form-radio(){
	&[type='checkbox'], &[type='radio'] {
		border: 1px solid $form-radio-border;
	}
	// don't allow checkboxes to be fully round
	&[type='checkbox'] {
		border-radius: min(4px, $form-border-radius);
	}

	// &[type='radio'] { background-size: 0%; transition: background-size 75ms ease-in; }

}
@mixin hook-form-radio-focus(){
	// border-color: $form-radio-focus-border;
	box-shadow: 0 0 0 $form-focus-outline-width $form-focus-outline;
}
@mixin hook-form-radio-checked(){
	border-color: $form-radio-checked-border;

	&[type='radio'] { background-size: 200%; }
}
// @mixin hook-form-radio-checked-focus(){  }
@mixin hook-form-radio-disabled(){
	border-color: $form-radio-disabled-border;
}



// Legend
// ========================================================================

@mixin hook-form-legend(){
	font-weight: $base-strong-font-weight;
	margin-bottom: $global-small-margin;
}


// Label
// ========================================================================

@mixin hook-form-label(){
	color: $form-label-color;
	font-size: $form-label-font-size;
	font-weight: 600;

	user-select: none;
	pointer-events: none;

	max-width: calc(100% - ($form-padding-horizontal * 2));

	> abbr { display: none; }

	.top_label & { order: 0; }
	.bottom_label & { order: 1; }

	// Dynamic positioning, but not for <legend> elements, which GF uses for radios.
	// Labels appear above text on text/textarea fields with input, and are hidden otherwise.
	// &:not(legend) {
	// 	color: $gray-600;
	// 	height: $form-label-height;
	// 	font-size: $base-small-font-size;
	// 	font-weight: 600;

	// 	position: absolute;
	// 	margin-left: calc( $form-padding-horizontal + $form-border-width );
	// 	margin-top: 1px; //$form-padding-vertical;

	// 	transform: translateY(.3em);
	// 	transition-property: transform, opacity;
	// 	transition-duration: 100ms;
	// 	transition-timing-function: ease;

	// 	opacity: 0;

	// 	z-index: 1;
	// }
}


// Layout
// ========================================================================

// @mixin hook-form-stacked-label(){}

// @mixin hook-form-horizontal-label(){}


// Miscellaneous
// ========================================================================

@mixin hook-form-misc(){

	// Add extra bottom padding when a progress bar (counter) is present.
	// progress + .uk-input,
	// progress + .uk-textarea {
	// 	padding-bottom: calc( $form-padding-vertical + 3px );
	// }

	// Better sizes for small/large forms
	// .uk-select:not([multiple]):not([size]) { background-size: 1.5em; }
	.uk-select:not([multiple]):not([size]) { background-size: 1.85em; }

	// Nudge select arrows on pill forms
	@if ( $form-border-radius >= math.div($form-height, 2) ) {
		.uk-select:not([multiple]):not([size]) { background-position-y: 56%; }
	}

	.uk-form-icon:not(ion-icon) {
		// keeps the icon in the right place
		// height: $form-height;
		height: 100%;
	}

	// pill form fields need a little extra margin for icons
	@if ( $form-border-radius >= math.div($form-height, 2) ) {
		form.uk-search .uk-search-icon:not(.uk-search-icon-flip),
		.uk-form-icon:not(.uk-form-icon-flip) { left: 3px; }

		.uk-form-icon-flip, .uk-search-icon-flip { left: auto; right: 3px; }
	}

	.uk-form-icon.hovered { color: $form-icon-hover-color; }

	// @media screen and ( min-width: $breakpoint-medium ) {
	//     .uk-form-horizontal .gfield {
	//         display: flex;
	//     }
	// }

	.woocommerce-invalid,
	.gfield_error {
		.uk-input, .uk-textarea, .uk-select {
			@extend %invalid_input;
		}
		.uk-form-label {

			.gfield_validation_message {
				font-size: $global-small-font-size;
				color: $alert-warning-color;
			}

		}
	}

	// Dynamic labels
	// $form-label-font-size-context: decimal($form-label-font-size);

	// form .active:not(.hidden_label),
	// form .has_input:not(.hidden_label) {

	// 	.uk-input, .uk-select, .uk-textarea {
	// 		padding-top: $form-label-height;
	// 		padding-bottom: $form-padding-vertical;
	// 		&::placeholder { opacity: 0; }
	// 	}

	// 	.uk-form-label {
	// 		opacity: 1;
	// 		transform: translateY(0);
	// 	}
	// }

}


// Inverse
// ========================================================================


@mixin hook-inverse-form(){
	background-clip: border-box;

	&[aria-required]:placeholder-shown {
		background-image: $required-mark-light;
		border-right-color: transparent;
	}
}

@mixin hook-inverse-form-focus(){
	box-shadow: 0 0 0 $form-focus-outline-width $inverse-form-focus-outline;
}
// @mixin hook-inverse-form-radio(){}
@mixin hook-inverse-form-radio-focus(){
	box-shadow: 0 0 0 $form-focus-outline-width $inverse-form-focus-outline;
}
// @mixin hook-inverse-form-radio-checked(){}
// @mixin hook-inverse-form-radio-checked-focus(){}
// @mixin hook-inverse-form-label(){}
